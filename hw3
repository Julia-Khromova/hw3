'''
Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
'''
a = int(input("введите делимое: "))
b = int(input("Введите делитель: "))

if b!=0:
    def c(a, b):
        return a / b
    result = c(a, b)
    print(result)
else:
    print("Нельзя делить на 0")


'''
Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
'''

def user(name, surname, year, sity, email, number):
    print(f"name - {name}; surname - {surname}; year - {year}; sity - {sity}; email - {email}; number - {number}")

user(name="Juli", surname="Khromova", year=1993, sity="Moscow", email="juli@googl.com", number=7777777)


'''
Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.
'''

def my_func(a, b, c):
    return a + b, a + c, b + c
print(max(my_func(1, 2, 3)))


'''
Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
'''


def my_func(x, y):
    return x ** y
print(my_func(10, -2))

'''
Жду комментарии))

def my_func(*args):
    for result in my_func(args):
        if args_2 < 0:
            result = 1 / (args_1 ** args_2)
            print(result)
        else:
            print("Вы ввели положительное число или 0")
args_1 = 10
args_2 = -2
'''


'''
Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме
 и после этого завершить программу.
'''

def my_sum ():
    sum_res = 0
    ex = False
    while ex == False:
        number = input("Ввдите числа или !").split()

        res = 0
        for el in range(len(number)):
            if number[el] == '!' or number[el] == '!':
                ex = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'Current sum is {sum_res}')
    print(f'Your final sum is {sum_res}')


my_sum()


'''
Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text. Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
 Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
'''
def int_func (*word):
    user_word = input("Введите Ваше слово:  ")
    print(user_word.title())
    return
int_func()

